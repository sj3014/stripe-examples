{"ast":null,"code":"var _jsxFileName = \"/Users/seongmoonjo/Enkor/stripe-checkout-sample-code/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport \"./App.css\"; // Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\n\nconst stripePromise = loadStripe(\"pk_test_51IQ36lDK0C6tfximA32MoJb3hD1aSoaEz0AOnJvtmbxGCrTa04K6vmdjPlpEVM1V3n7k2IEWgIUMihk8jndhvCX000GZYBMYra\");\n\nconst ProductDisplay = ({\n  handleClick\n}) => /*#__PURE__*/React.createElement(\"section\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"product\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: \"https://i.imgur.com/EHyR2nP.png\",\n  alt: \"The cover of Stubborn Attachments\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"description\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n}, \"Stubborn Attachments\"), /*#__PURE__*/React.createElement(\"h5\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, \"$20.00\"))), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  id: \"checkout-button\",\n  role: \"link\",\n  onClick: handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, \"Checkout\"));\n\nconst Message = ({\n  message\n}) => /*#__PURE__*/React.createElement(\"section\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}, message));\n\nexport default function App() {\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n    }\n\n    if (query.get(\"canceled\")) {\n      setMessage(\"Order canceled -- continue to shop around and checkout when you're ready.\");\n    }\n  }, []);\n\n  const handleClick = async event => {\n    const stripe = await stripePromise;\n    console.log(\"HELLLOOO\");\n    const response = await fetch(\"/create-checkout-session\", {\n      method: \"POST\"\n    });\n    const session = await response.json(); // When the customer clicks on the button, redirect them to Checkout.\n\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n\n    if (result.error) {// If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n  };\n\n  return message ? /*#__PURE__*/React.createElement(Message, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(ProductDisplay, {\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/seongmoonjo/Enkor/stripe-checkout-sample-code/src/App.js"],"names":["React","useState","useEffect","loadStripe","stripePromise","ProductDisplay","handleClick","Message","message","App","setMessage","query","URLSearchParams","window","location","search","get","event","stripe","console","log","response","fetch","method","session","json","result","redirectToCheckout","sessionId","id","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,WAAP,C,CACA;AACA;;AACA,MAAMC,aAAa,GAAGD,UAAU,CAC9B,6GAD8B,CAAhC;;AAIA,MAAME,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AACE,EAAA,GAAG,EAAC,iCADN;AAEE,EAAA,GAAG,EAAC,mCAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAKE;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CALF,CADF,eAWE;AACE,EAAA,IAAI,EAAC,QADP;AAEE,EAAA,EAAE,EAAC,iBAFL;AAGE,EAAA,IAAI,EAAC,MAHP;AAIE,EAAA,OAAO,EAAEA,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF;;AAuBA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIA,OAAJ,CADF,CADF;;AAMA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACD,OAAD,EAAUE,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMS,KAAK,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAd;;AAEA,QAAIJ,KAAK,CAACK,GAAN,CAAU,SAAV,CAAJ,EAA0B;AACxBN,MAAAA,UAAU,CAAC,uDAAD,CAAV;AACD;;AAED,QAAIC,KAAK,CAACK,GAAN,CAAU,UAAV,CAAJ,EAA2B;AACzBN,MAAAA,UAAU,CACR,2EADQ,CAAV;AAGD;AACF,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMJ,WAAW,GAAG,MAAOW,KAAP,IAAiB;AACnC,UAAMC,MAAM,GAAG,MAAMd,aAArB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAAD,EAA6B;AACvDC,MAAAA,MAAM,EAAE;AAD+C,KAA7B,CAA5B;AAIA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAtB,CAPmC,CASnC;;AACA,UAAMC,MAAM,GAAG,MAAMR,MAAM,CAACS,kBAAP,CAA0B;AAC7CC,MAAAA,SAAS,EAAEJ,OAAO,CAACK;AAD0B,KAA1B,CAArB;;AAIA,QAAIH,MAAM,CAACI,KAAX,EAAkB,CAChB;AACA;AACA;AACD;AACF,GAnBD;;AAqBA,SAAOtB,OAAO,gBACZ,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,gBAGZ,oBAAC,cAAD;AAAgB,IAAA,WAAW,EAAEF,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAKD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport \"./App.css\";\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\nconst stripePromise = loadStripe(\n  \"pk_test_51IQ36lDK0C6tfximA32MoJb3hD1aSoaEz0AOnJvtmbxGCrTa04K6vmdjPlpEVM1V3n7k2IEWgIUMihk8jndhvCX000GZYBMYra\"\n);\n\nconst ProductDisplay = ({ handleClick }) => (\n  <section>\n    <div className=\"product\">\n      <img\n        src=\"https://i.imgur.com/EHyR2nP.png\"\n        alt=\"The cover of Stubborn Attachments\"\n      />\n      <div className=\"description\">\n        <h3>Stubborn Attachments</h3>\n        <h5>$20.00</h5>\n      </div>\n    </div>\n    <button\n      type=\"button\"\n      id=\"checkout-button\"\n      role=\"link\"\n      onClick={handleClick}\n    >\n      Checkout\n    </button>\n  </section>\n);\n\nconst Message = ({ message }) => (\n  <section>\n    <p>{message}</p>\n  </section>\n);\n\nexport default function App() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n    }\n\n    if (query.get(\"canceled\")) {\n      setMessage(\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\n      );\n    }\n  }, []);\n\n  const handleClick = async (event) => {\n    const stripe = await stripePromise;\n    console.log(\"HELLLOOO\");\n    const response = await fetch(\"/create-checkout-session\", {\n      method: \"POST\",\n    });\n\n    const session = await response.json();\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n  };\n\n  return message ? (\n    <Message message={message} />\n  ) : (\n    <ProductDisplay handleClick={handleClick} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}